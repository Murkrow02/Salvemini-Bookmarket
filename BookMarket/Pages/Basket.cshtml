@page
@model BookMarket.Pages.BasketModel
@{
    ViewData["Title"] = "Carrello";
}

<!--Top Bar-->
<header>
    <div class="header-container">
        <!--Back button-->
        <a class="fas fa-chevron-left header-backbutton" onclick="window.location.href = 'dashboard'"></a>
        <!--Title-->
        <span class="header-title-label">Carrello</span>

        <!--Buy Button-->
        <button class="buyButton" onclick="ConfirmBuy()">
            Compra
        </button>
    </div>

    <!--Separator-->
    <div class="header-separator"></div>
</header>

<!--List-->
<ul id="list" style="padding:0px">
    <partial name="_BasketList" model="Model.Books" itemid="list" />
</ul>

<!--Fake form to delete book from basket-->
<form method="post" style="display:none">
    <input asp-for="@Model.ToDeleteBook" id="bookToDeleteId" />
</form>

<!--Post form-->
<script>
    $(function () {
        $('form').submit(function (e) {

            //Override normal form submission
            e.preventDefault()

            //Post form with ajax
            postForm($(this), "Il libro è stato rimosso con successo dal tuo carrello", "dashboard");
        })
    })</script>

<!--Confirm basket buy-->
<script>
    function ConfirmBuy() {
        Swal.fire({
            title: 'Prenotazione',
            html:
                '<span class="popup-desc desc-bold">Totale</span> <span class="popup-desc" >' + '@Model.Books.Count()' + ' libri</span>' +
                '<span class="popup-desc desc-bold">Prezzo</span> <span class="popup-desc" >' + '€ @String.Format("{0:0.00}", Model.Price)' + '</span>',
            showCancelButton: true,
            confirmButtonText:
                '<i class="fa fa-check"></i> Prenota',
            cancelButtonText:
                'Annulla',
            focusConfirm: true,
            confirmButtonColor: '#C6A0FC',
            reverseButtons: true,
            footer: 'Attenzione: una volta prenotati i libri non sarà possibile effettuare ulteriori prenotazioni',
            showLoaderOnConfirm: true
        }).then(result => {

            //Confirmed, proceed buying
            var body = document.getElementsByTagName("BODY")[0];
            body.classList.add("disabledBtn");
            $.get(window.location.pathname + '?handler=Buy', function (data) {
                if (data.status === "success") {
                    //Meeting check
                    window.location.href = 'meetingcheck';
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Errore',
                        text: data.status,
                    });
                    body.classList.remove("disabledBtn");
                }
            });
        })

    }
</script>

<style>
    .buyButton {
        margin-left: auto;
        background-color: #c6a0fc;
        color: white;
        outline: none;
        border: none;
        padding: 6px 10px;
        font-size: 25px;
        border-radius: 10px;
    }

        .buyButton:hover {
            cursor: pointer;
            background-color: #ac77f8;
            transition-duration: 0.3s;
        }
</style>
<!--PopupStyle-->
<style>
    .popup-desc {
        width: 100%;
        display: block;
        color: #8E8E8E;
        text-align: start;
    }

    .desc-bold {
        font-weight: bold;
        margin-top: 10px;
    }

    body {
        margin-bottom: 100px !important;
    }
</style>

